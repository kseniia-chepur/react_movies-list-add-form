{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","urlError","label","placeholder","required","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","hasUrlError","htmlFor","type","classNames","event","target","onBlur","NewMovie","onAdd","count","setCount","newMovieInfo","setNewMovieInfo","imgUrlError","setImgUrlError","imdbUrlError","setImdbUrlError","isInputEmpty","trim","pattern","handleChange","prevData","onSubmit","e","preventDefault","test","prevCount","disabled","App","moviesFromServer","setMovies","newMovie","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e67ee0d9.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie?.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  urlError?: boolean,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (name: string, newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  urlError = false,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n\n  const hasError = touched && required && !value;\n  const hasUrlError = touched && urlError;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          name={name}\n          value={value}\n          required={required}\n          onChange={event => onChange(event.target.name, event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {hasUrlError && !hasError && (\n        <p className=\"help is-info\">{`${label} is not valid`}</p>\n      )}\n\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (newMovie:Movie) => void\n};\n\nexport const NewMovie:React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [newMovieInfo, setNewMovieInfo] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n  const [imgUrlError, setImgUrlError] = useState(false);\n  const [imdbUrlError, setImdbUrlError] = useState(false);\n\n  const {\n    title, description, imgUrl, imdbUrl, imdbId,\n  } = newMovieInfo;\n\n  const isInputEmpty\n    = !title.trim() || !imgUrl.trim() || !imdbUrl.trim() || !imdbId.trim();\n\n  /* eslint-disable max-len */\n  const pattern\n     = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  const handleChange = (name:string, value:string) => {\n    setNewMovieInfo(prevData => (\n      {\n        ...prevData,\n        [name]: value,\n      }\n    ));\n  };\n\n  const reset = () => {\n    setNewMovieInfo({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n\n    setImgUrlError(false);\n    setImdbUrlError(false);\n  };\n\n  const handleSubmit = (e:React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    setImgUrlError(!pattern.test(imgUrl));\n    setImdbUrlError(!pattern.test(imdbUrl));\n\n    if (!pattern.test(imgUrl) || !pattern.test(imdbUrl)) {\n      return;\n    }\n\n    onAdd(newMovieInfo);\n\n    setCount(prevCount => prevCount + 1);\n    reset();\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className=\"NewMovie\"\n      key={count}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={(name, value) => handleChange(name, value)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={(name, value) => handleChange(name, value)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        urlError={imgUrlError}\n        onChange={(name, value) => handleChange(name, value)}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        urlError={imdbUrlError}\n        onChange={(name, value) => handleChange(name, value)}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={(name, value) => handleChange(name, value)}\n        required\n\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isInputEmpty}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const onAdd = (newMovie:Movie) => {\n    setMovies(prevMovies => [...prevMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}